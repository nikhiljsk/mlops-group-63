# Byte-compiled / optimized / DLL files
artifacts/*.pkl
!artifacts/.gitkeep
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# Kiro IDE
.kiro/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Docker
.dockerignore

# MLflow
mlruns/
mlartifacts/
.mlflow/

# Model artifacts (keep structure but ignore large files)
artifacts/*.pkl
artifacts/*.joblib
artifacts/*.h5
artifacts/*.pb
artifacts/*.onnx
artifacts/*.pt
artifacts/*.pth
artifacts/models/
!artifacts/.gitkeep

# Data files (keep structure but ignore large datasets)
data/*.csv
data/*.json
data/*.parquet
data/*.xlsx
data/*.zip
data/*.tar.gz
data/raw/
data/processed/
data/external/
!data/.gitkeep
!data/sample/

# Logs and databases
logs/
*.log
*.db
*.sqlite
*.sqlite3
logs.db
app.log
api.log

# Monitoring and metrics
prometheus_data/
grafana_data/

# Temporary files
tmp/
temp/
.tmp/
.temp/

# Backup files
*.bak
*.backup
*~
*.orig

# Configuration files with secrets
.env.local
.env.production
.env.staging
config/secrets.yml
config/production.yml
secrets.json

# Docker volumes and data
docker-data/
volumes/

# Kubernetes
*.kubeconfig
k8s-secrets/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
*.tfvars

# AWS
.aws/
aws-credentials

# Google Cloud
gcp-credentials.json
*.json

# Azure
.azure/

# SSH keys
*.pem
*.key
id_rsa*
id_ed25519*

# SSL certificates
*.crt
*.cert
*.p12
*.pfx

# Local development
local/
dev/
development/

# IDE and editor files
*.swp
*.swo
.vscode/settings.json
.vscode/launch.json
.idea/
*.iml

# OS generated files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Python virtual environments
venv*/
env*/
.venv*/
.env*/

# Package files
*.tar.gz
*.zip
*.rar
*.7z

# Large files that shouldn't be in git
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.m4v
*.3gp

# Image files (if not needed for documentation)
# Uncomment if you don't want to track images
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.svg

# Audio files
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.wma

# Archive files
*.tar
*.gz
*.bz2
*.xz
*.Z

# Compiled files
*.com
*.class
*.dll
*.exe
*.o
*.so

# Temporary directories
tmp/
temp/
cache/
.cache/

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# R
.Rhistory
.RData
.Ruserdata

# MATLAB
*.asv
*.m~

# LaTeX
*.aux
*.bbl
*.blg
*.fdb_latexmk
*.fls
*.log
*.out
*.synctex.gz
*.toc

# Keep important empty directories
!logs/.gitkeep
!data/.gitkeep
!artifacts/.gitkeep
!tmp/.gitkeep

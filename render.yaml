# render.yaml - Deploys the Iris API, MLflow Server, and a PostgreSQL DB

# The 'services' block is for applications that run code.
services:
  # 1. MLflow Server
  - type: web
    name: mlflow-server
    plan: free # Use Render's free instance type
    runtime: docker
    # Explicitly set the build context to the 'mlflow' directory
    dockerContext: ./mlflow
    dockerfilePath: Dockerfile
    healthCheckPath: /health
    envVars:
      - key: MLFLOW_BACKEND_STORE_URI
        fromDatabase:
          name: mlflow-db-postgres # Connects to the database defined below
          property: connectionString
      # Note: Without a persistent disk, artifacts will be ephemeral.
      - key: MLFLOW_DEFAULT_ARTIFACT_ROOT
        value: /mlruns

  # 2. Iris Prediction API
  - type: web
    name: iris-api
    plan: free # Use Render's free instance type
    runtime: docker
    # Explicitly set the build context to the project root directory
    dockerContext: .
    dockerfilePath: Dockerfile
    healthCheckPath: /health
    envVars:
      - key: MLFLOW_TRACKING_URI
        fromService:
          type: web
          name: mlflow-server # Connects to the MLflow service above
          envVarKey: RENDER_EXTERNAL_URL  # Gets the full external URL
      - key: DATABASE_URL
        value: sqlite:///logs/logs.db
      - key: DEBUG
        value: "false"

# The 'databases' block is the correct place to define the PostgreSQL instance.
databases:
  - name: mlflow-db-postgres
    plan: free # Use Render's free tier for the database
    postgresMajorVersion: "13"
